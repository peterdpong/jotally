{"version":3,"sources":["services/notes.js","components/Note.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","put","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kOAqBe,EAjBA,WAEb,OADgBA,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAClB,OAAOA,EAASC,SAcL,EAVI,SAAAC,GAEjB,OADgBL,IAAMM,KAVR,aAUsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALI,SAACG,EAAIF,GAEtB,OADgBL,IAAMQ,IAAN,UAfF,aAeE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCL5BK,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCHpCK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAc,MAAXA,EACM,KAIP,yBAAKJ,UAAU,SACZI,IAKDC,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,yDAkFSC,EA7EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,cAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,qBAJxB,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqBjC,MAAK,SAAAkC,GACxBT,EAASS,QAEV,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAkBMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAA/B,GAAI,OAAIA,EAAKG,aAoBhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASc,IACvB,6BACE,4BAAQhB,QAAS,kBAAMe,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGU,EAAYE,KAAI,SAAAhC,GAAI,OACnB,kBAAC,EAAD,CACAiC,IAAKjC,EAAKH,GACVG,KAAMA,EACNC,iBAAkB,kBAhCD,SAACJ,GACxB,IAAMG,EAAOgB,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAEtC,KAAOA,KAChCuC,EAAW,2BAAOpC,GAAP,IAAaG,WAAYH,EAAKG,YAE/CsB,EAAuB5B,EAAIuC,GAAa5C,MAAK,SAAA6C,GAC3CpB,EAASD,EAAMgB,KAAI,SAAAhC,GAAI,OAAIA,EAAKH,KAAOA,EAAKG,EAAOqC,SAEpDC,OAAM,SAAAC,GACLhB,EAAgB,SAAD,OACJvB,EAAKK,QADD,0CAGfmC,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAI,GAAC,OAAIA,EAAEtC,KAAOA,SAkBRI,CAAiBD,EAAKH,WAGlD,0BAAM4C,SAlDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBvC,QAASa,EACT2B,MAAM,IAAIC,MAAOC,cACjB5C,UAAW6C,KAAKC,SAAW,IAG7BxB,EAAuBmB,GAAYpD,MAAK,SAAA6C,GACtCpB,EAASD,EAAMkC,OAAOb,IACtBlB,EAAW,SAyCT,2BAAOgC,MAAOjC,EAASkC,SAxDJ,SAACV,GACxBf,QAAQC,IAAIc,EAAMW,OAAOF,OACzBhC,EAAWuB,EAAMW,OAAOF,UAuDpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MClGNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.603e18ec.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/notes\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst createNote = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst updateNote = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, createNote, updateNote}\n","import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n  const label = note.important ? \"Make not important\" : \"Make important\"\n\n  return (\n    <li className='note'>\n      {note.content}  \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\n\n\nconst Notification = ( {message} ) => {\n  if(message == null){\n    return null\n  }\n\n  return(\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  \n  return (\n    <div style={footerStyle}>\n      <br/>\n      <em>Note App - Peter D'Pong</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n  console.log(\"render\", notes.length, \"notes\")\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService.createNote(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote(\"\")})\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const toggleImportance = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService.updateNote(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'Important' : 'All'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n          key={note.id} \n          note={note}\n          toggleImportance={() => toggleImportance(note.id)}\n          />)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}