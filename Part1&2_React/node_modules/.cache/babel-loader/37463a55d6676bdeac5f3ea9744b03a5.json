{"ast":null,"code":"var _jsxFileName = \"/Users/peterdpong/Projects/FullStackOpen/Part1&2_React/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport noteService from './services/notes';\nimport Note from './components/Note';\n\nconst Notification = ({\n  message\n}) => {\n  if (message == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, message);\n};\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: footerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Note App - Peter D'Pong\"));\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  console.log(\"render\", notes.length, \"notes\");\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    noteService.createNote(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportance = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.updateNote(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from the server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const handleLogin = event => {\n    event.preventDefault();\n    console.log('Logging in with', username, password);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Notification, {\n    message: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Username\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Show \", showAll ? 'Important' : 'All')), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportance(note.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/peterdpong/Projects/FullStackOpen/Part1&2_React/src/App.js"],"names":["React","useState","useEffect","noteService","Note","Notification","message","Footer","footerStyle","color","fontStyle","fontSize","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","getAll","then","initialNotes","console","log","length","handleNoteChange","event","target","value","addNote","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","createNote","returnedNote","concat","notesToShow","filter","note","toggleImportance","id","find","n","changedNote","updateNote","map","catch","error","setTimeout","handleLogin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\n\n\nconst Notification = ( {message} ) => {\n  if(message == null){\n    return null\n  }\n\n  return(\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  \n  return (\n    <div style={footerStyle}>\n      <br/>\n      <em>Note App - Peter D'Pong</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n  console.log(\"render\", notes.length, \"notes\")\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService.createNote(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote(\"\")})\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const toggleImportance = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService.updateNote(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    console.log('Logging in with', username, password)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage}/>\n\n      <form onSubmit={handleLogin}>\n        <div>\n          Username\n          <input type=\"text\" value={username} name=\"Username\" onChange={ ({target}) => setUsername(target.value) }/>\n        </div>\n        <div>\n          Password\n          <input type=\"password\" value={password} name=\"Password\" onChange={ ({target}) => setPassword(target.value) }/>\n        </div>\n      </form>\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'Important' : 'All'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n          key={note.id} \n          note={note}\n          toggleImportance={() => toggleImportance(note.id)}\n          />)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}