{"version":3,"sources":["services/notes.js","services/login.js","components/LoginForm.js","components/NoteForm.js","services/register.js","components/RegisterForm.js","components/Toggable.js","components/Note.js","components/NotesList.js","App.js","index.js"],"names":["token","getAll","a","config","headers","Authorization","axios","get","response","console","log","data","createNote","newObject","post","updateNote","id","put","then","setToken","newToken","login","credentials","LoginForm","username","password","setUser","setUsername","setPassword","setErrorMessage","history","useHistory","handleLogin","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","noteService","push","setTimeout","className","onSubmit","for","value","onChange","target","type","onClick","NoteForm","useState","newNoteDesc","setNewNoteDesc","newNoteTitle","setNewNoteTitle","title","content","important","rows","cols","register","RegisterForm","newUsername","setNewUsername","newPassword","setNewPassword","handleRegister","registerService","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","Note","note","toggleImportance","label","NotesList","notesToShow","setNotes","useEffect","initialNotes","map","key","Notification","message","App","notes","setNewNote","showAll","setShowAll","errorMessage","useRef","loggedUserJSON","getItem","parse","addNote","noteObject","returnedNote","concat","filter","find","n","changedNote","catch","error","to","src","alt","path","render","href","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dc654cd0.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/notes\"\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll =  async () => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.get(baseUrl, config)\n  console.log(response.data)\n  return response.data\n}\n\nconst createNote = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst updateNote = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, createNote, updateNote, setToken}\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\nimport noteService from '../services/notes'\nimport loginService from '../services/login'\n\n\n\n\nconst LoginForm = ({\n  username,\n  password,\n  setUser,\n  setUsername,\n  setPassword,\n  setErrorMessage\n  \n}) => {\n\n  const history = useHistory()\n\n  const onCancel = (event) => {\n    event.preventDefault()\n    history.push('/')\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n  \n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n  \n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('Wrong username or password.')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2500)\n    } \n  }\n\n\n  return (\n    <div>\n      <h2 className=\"title\">Login</h2>\n\n      <form onSubmit={handleLogin}>\n        <div>\n          <label className=\"subtitle\" for=\"username\">Username</label>\n          <input\n            className=\"formTextbox\"\n            id=\"username\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n\n        <div>\n        <label className=\"subtitle\" for=\"password\">Password</label>\n          <input\n            className=\"formTextbox\"\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button className=\"button\" id='login-button' type=\"submit\">Login</button>\n        <button className=\"button\" id='cancel-button' onClick={onCancel}>Cancel</button>\n      </form>\n\n      \n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n  setUsername: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  setErrorMessage: PropTypes.func.isRequired,\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst NoteForm = ({createNote}) => {\n  const [newNoteDesc, setNewNoteDesc] = useState('')\n  const [newNoteTitle, setNewNoteTitle] = useState('')\n  \n\n  const addNote = (event) => {\n    event.preventDefault()\n    \n    createNote({\n      title: newNoteTitle,\n      content: newNoteDesc,\n      important: false\n    })\n\n    setNewNoteDesc('')\n    setNewNoteTitle('')\n  }\n  return (\n    <div className='formDiv'>\n      <h2 className=\"title\">Add a new note</h2>\n\n      <form onSubmit={addNote}>\n        {/* <div>\n          <label className=\"subtitle\" for=\"username\">Title</label>\n          <input\n            className=\"formTextbox\"\n            id=\"NoteTitle\"\n            value={newNoteTitle}\n            onChange={({ target }) => setNewNoteTitle(target.value)}\n          />\n        </div> */}\n        \n        <div>\n          <label className=\"subtitle\" for=\"username\">Note</label>\n          <textarea \n            rows=\"4\" cols=\"25\" \n            className=\"formTextbox textbox-large\"\n            id=\"NoteDesc\"\n            value={newNoteDesc}\n            onChange={({ target }) => setNewNoteDesc(target.value)}></textarea>\n        </div>\n        <button className=\"button\" type=\"submit\">Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteForm","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst register = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response\n}\n\nexport default { register }","import React, { useState } from 'react'\nimport registerService from '../services/register'\nimport { useHistory } from 'react-router-dom'\n\n\nconst RegisterForm = ({\n  setErrorMessage\n}) => {\n  const history = useHistory()\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('') \n\n  const onCancel = (event) => {\n    event.preventDefault()\n    history.push('/')\n  }\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n\n    if(newUsername == '' || newPassword == ''){\n      setErrorMessage('Username or Password cannot be left empty.')\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 2500)\n      return\n    }\n\n    try {\n      const user = await registerService.register({\n        newUsername, newPassword\n      })\n      setNewUsername('')\n      setNewPassword('')\n      history.push('/')\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('Error: Could not register. Try again later.')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2500)\n    }\n  }\n\n  return(\n    <div>\n      <h2 className=\"title\">Register</h2>\n\n      <form onSubmit={handleRegister}>\n        <div>\n          <label className=\"subtitle\" for=\"username\">Username</label>\n          <input\n            className=\"formTextbox\"\n            id=\"username\"\n            value={newUsername}\n            onChange={({ target }) => setNewUsername(target.value)}\n          />\n        </div>\n\n        <div>\n        <label className=\"subtitle\" for=\"password\">Password</label>\n          <input\n            className=\"formTextbox\"\n            id=\"password\"\n            type=\"password\"\n            value={newPassword}\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <button className=\"button\" id='login-button' type=\"submit\">Register</button>\n        <button className=\"button\" id='cancel-button' onClick={onCancel}>Cancel</button>\n      </form>\n\n      \n    </div>\n  )\n}\n\nexport default RegisterForm","import React, {useState, useImperativeHandle} from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return(\n    <div>\n      <div style={hideWhenVisible}>\n        <button className=\"button\" onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"toggableContent\">\n        {props.children}\n        <button className=\"button\" onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  )\n}) \n\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n  \n\nexport default Togglable","import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n  const label = note.important ? \"Make not important\" : \"Make important\"\n\n  return (\n    <li className='note'>\n      <p>{note.content}</p>\n      <button className=\"button button-dark\" onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React, { useEffect } from 'react'\nimport Note from './Note'\nimport noteService from '../services/notes'\nimport NoteForm from './NoteForm'\n\nconst NotesList = ({ notesToShow, toggleImportance, setNotes, createNote}) => {\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  return(\n    <div>\n      <NoteForm createNote={createNote}/>\n\n      <h2 className=\"title\">Your notes.</h2>\n      <ul className=\"noteList\">\n          {notesToShow.map(note => \n            <Note \n            key={note.id} \n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n            />)}\n      </ul>\n    </div>\n    \n  )\n\n}\n\nexport default NotesList","import React, { useState, useEffect, useRef } from 'react'\nimport noteService from './services/notes'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport RegisterForm from './components/RegisterForm'\nimport Toggable from './components/Toggable'\n\nimport NotesList from './components/NotesList'\n\nimport { BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\n\nconst Notification = ( {message} ) => {\n  if(message == null){\n    return null\n  }\n\n  return(\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n  const noteFormRef = useRef()\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    if(user){\n      noteService.getAll().then(initialNotes => {\n        setNotes(initialNotes)\n      })\n    }\n  }, [])\n\n  const addNote = (noteObject) => {\n    noteService.createNote(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote(\"\")})\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const toggleImportance = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService.updateNote(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Notification message={errorMessage}/>\n\n        <Link to=\"/\">\n          <div className=\"navbar\">\n              <img className=\"logo\" src=\"./res/pencil-svg.svg\" alt=\"Logo\"/>\n              <h1 className=\"title\">Jotally</h1>\n          </div>\n        </Link>\n        \n\n        <div className=\"optionsbar\">\n          <button className=\"button\" onClick={() => setShowAll(!showAll)}>\n            Show {showAll ? 'Important' : 'All'}\n          </button>\n          <div className=\"flex-right\">\n            <Link to=\"/login\">\n              <button className=\"button\">Login</button>\n            </Link>\n            <Link to=\"/register\">\n              <button className=\"button\">Register</button>\n            </Link>\n          </div>\n        </div>\n        \n\n        <Switch>\n          <Route path=\"/login\">\n            <LoginForm\n            username={username}\n            password={password}\n            setUsername={setUsername}\n            setPassword={setPassword}\n            setUser={setUser}\n            setErrorMessage={setErrorMessage}\n            />\n          </Route>\n\n          <Route path=\"/register\">\n            <RegisterForm\n            setErrorMessage={setErrorMessage}\n            />\n          </Route>\n\n          <Route path=\"/\" render={() => \n            user ? <NotesList notesToShow={notesToShow} toggleImportance={toggleImportance} setNotes={setNotes} createNote={addNote}/> \n            : <h3 className=\"subtitle\">You aren't currently logged in. Log in to see your saved notes.</h3>}>\n            \n          </Route>\n        </Switch>\n\n        \n        <div className=\"footer\">\n          <p className=\"title\">Created by <a className=\"links\" href=\"https://peterdpong.github.io/\">Peter D'Pong</a></p>\n          \n          <div className=\"flex-right\">\n            <p className=\"title\"><a className=\"links\" href=\"https://github.com/peterdpong/jotally\">Source</a></p>\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}