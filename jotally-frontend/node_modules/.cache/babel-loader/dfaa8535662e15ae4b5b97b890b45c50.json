{"ast":null,"code":"import _slicedToArray from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useImperativeHandle}from'react';var Togglable=React.forwardRef(function(props,ref){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var hideWhenVisible={display:visible?'none':''};var showWhenVisible={display:visible?'':'none'};var toggleVisibility=function toggleVisibility(){setVisible(!visible);};useImperativeHandle(ref,function(){return{toggleVisibility:toggleVisibility};});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:hideWhenVisible},/*#__PURE__*/React.createElement(\"button\",{className:\"button\",onClick:toggleVisibility},props.buttonLabel)),/*#__PURE__*/React.createElement(\"div\",{style:showWhenVisible,className:\"toggableContent\"},props.children,/*#__PURE__*/React.createElement(\"button\",{className:\"button\",onClick:toggleVisibility},\"Cancel\")));});Togglable.displayName='Togglable';export default Togglable;","map":{"version":3,"sources":["/Users/peterdpong/Projects/jotally/jotally-frontend/src/components/Toggable.js"],"names":["React","useState","useImperativeHandle","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","displayName"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,mBAAzB,KAAmD,OAAnD,CAGA,GAAMC,CAAAA,SAAS,CAAGH,KAAK,CAACI,UAAN,CAAiB,SAACC,KAAD,CAAQC,GAAR,CAAgB,eACnBL,QAAQ,CAAC,KAAD,CADW,wCAC1CM,OAD0C,eACjCC,UADiC,eAGjD,GAAMC,CAAAA,eAAe,CAAG,CAAEC,OAAO,CAAEH,OAAO,CAAG,MAAH,CAAY,EAA9B,CAAxB,CACA,GAAMI,CAAAA,eAAe,CAAG,CAAED,OAAO,CAAEH,OAAO,CAAG,EAAH,CAAQ,MAA1B,CAAxB,CAEA,GAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BJ,UAAU,CAAC,CAACD,OAAF,CAAV,CACD,CAFD,CAIAL,mBAAmB,CAACI,GAAD,CAAM,UAAM,CAC7B,MAAO,CACLM,gBAAgB,CAAhBA,gBADK,CAAP,CAGD,CAJkB,CAAnB,CAMA,mBACE,4CACE,2BAAK,KAAK,CAAEH,eAAZ,eACE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAEG,gBAApC,EAAuDP,KAAK,CAACQ,WAA7D,CADF,CADF,cAIE,2BAAK,KAAK,CAAEF,eAAZ,CAA6B,SAAS,CAAC,iBAAvC,EACGN,KAAK,CAACS,QADT,cAEE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAEF,gBAApC,WAFF,CAJF,CADF,CAWD,CA3BiB,CAAlB,CA6BAT,SAAS,CAACY,WAAV,CAAwB,WAAxB,CAMA,cAAeZ,CAAAA,SAAf","sourcesContent":["import React, {useState, useImperativeHandle} from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return(\n    <div>\n      <div style={hideWhenVisible}>\n        <button className=\"button\" onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"toggableContent\">\n        {props.children}\n        <button className=\"button\" onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  )\n}) \n\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n  \n\nexport default Togglable"]},"metadata":{},"sourceType":"module"}