{"ast":null,"code":"var _jsxFileName = \"/Users/peterdpong/Projects/jotally/jotally-frontend/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport noteService from './services/notes';\nimport Note from './components/Note';\nimport loginService from './services/login';\nimport LoginForm from './components/LoginForm';\nimport NoteForm from './components/NoteForm';\nimport Toggable from './components/Toggable';\nimport NotesList from './components/NotesList';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nconst Notification = ({\n  message\n}) => {\n  if (message == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, message);\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const noteFormRef = useRef();\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = noteObject => {\n    noteFormRef.current.toggleVisibility();\n    noteService.createNote(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportance = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.updateNote(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from the server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const noteForm = () => /*#__PURE__*/React.createElement(Toggable, {\n    buttonLabel: \"New Note\",\n    ref: noteFormRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NoteForm, {\n    createNote: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    message: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"./res/pencil-svg.svg\",\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Jotally\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"optionsbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Show \", showAll ? 'Important' : 'All'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Login\")))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LoginForm, {\n    username: username,\n    password: password,\n    setUsername: setUsername,\n    setPassword: setPassword,\n    setUser: setUser,\n    setErrorMessage: setErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    render: () => user ? /*#__PURE__*/React.createElement(NotesList, {\n      notesToShow: notesToShow,\n      toggleImportance: toggleImportance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 20\n      }\n    }) : /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"You aren't currently logged in. Log in to see your saved notes.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Created by \", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"links\",\n    href: \"https://peterdpong.github.io/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 43\n    }\n  }, \"Peter D'Pong\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"links\",\n    href: \"https://github.com/peterdpong/jotally\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 34\n    }\n  }, \"Source\"))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/peterdpong/Projects/jotally/jotally-frontend/src/App.js"],"names":["React","useState","useEffect","useRef","noteService","Note","loginService","LoginForm","NoteForm","Toggable","NotesList","BrowserRouter","Router","Switch","Route","Link","Notification","message","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","loginVisible","setLoginVisible","noteFormRef","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","getAll","then","initialNotes","addNote","noteObject","current","toggleVisibility","createNote","returnedNote","concat","notesToShow","filter","note","important","toggleImportance","id","find","n","changedNote","updateNote","map","catch","error","content","setTimeout","noteForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport Toggable from './components/Toggable'\n\nimport NotesList from './components/NotesList'\n\nimport { BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\n\nconst Notification = ( {message} ) => {\n  if(message == null){\n    return null\n  }\n\n  return(\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n  const noteFormRef = useRef()\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService.createNote(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote(\"\")})\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const toggleImportance = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService.updateNote(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n\n  const noteForm = () => (\n    <Toggable buttonLabel='New Note' ref={noteFormRef}>\n      <NoteForm\n        createNote={addNote}/>\n    </Toggable>\n  )\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Notification message={errorMessage}/>\n\n        <Link to=\"/\">\n          <div className=\"navbar\">\n              <img className=\"logo\" src=\"./res/pencil-svg.svg\" alt=\"Logo\"/>\n              <h1 className=\"title\">Jotally</h1>\n          </div>\n        </Link>\n        \n\n        <div className=\"optionsbar\">\n          <button className=\"button\" onClick={() => setShowAll(!showAll)}>\n            Show {showAll ? 'Important' : 'All'}\n          </button>\n          <div className=\"flex-right\">\n            <Link to=\"/login\">\n              <button className=\"button\">Login</button>\n            </Link>\n          </div>\n        </div>\n        \n\n        <Switch>\n          <Route path=\"/login\">\n            <LoginForm\n            username={username}\n            password={password}\n            setUsername={setUsername}\n            setPassword={setPassword}\n            setUser={setUser}\n            setErrorMessage={setErrorMessage}\n            />\n          </Route>\n\n          <Route path=\"/\" render={() => \n            user ? <NotesList notesToShow={notesToShow} toggleImportance={toggleImportance}/> \n            : <h3 className=\"subtitle\">You aren't currently logged in. Log in to see your saved notes.</h3>}>\n            \n          </Route>\n        </Switch>\n\n        \n        <div className=\"footer\">\n          <p className=\"title\">Created by <a className=\"links\" href=\"https://peterdpong.github.io/\">Peter D'Pong</a></p>\n          \n          <div className=\"flex-right\">\n            <p className=\"title\"><a className=\"links\" href=\"https://github.com/peterdpong/jotally\">Source</a></p>\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}