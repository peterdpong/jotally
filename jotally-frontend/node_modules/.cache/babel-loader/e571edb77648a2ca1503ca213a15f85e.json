{"ast":null,"code":"import _regeneratorRuntime from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import registerService from'../services/register';import{useHistory}from'react-router-dom';var RegisterForm=function RegisterForm(_ref){var setErrorMessage=_ref.setErrorMessage;var history=useHistory();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newUsername=_useState2[0],setNewUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newPassword=_useState4[0],setNewPassword=_useState4[1];var onCancel=function onCancel(event){event.preventDefault();history.push('/');};var handleRegister=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(newUsername==''||newPassword=='')){_context.next=5;break;}setErrorMessage('Username or Password cannot be left empty.');setTimeout(function(){setErrorMessage('');},2500);return _context.abrupt(\"return\");case 5:_context.prev=5;_context.next=8;return registerService.register({newUsername:newUsername,newPassword:newPassword});case 8:user=_context.sent;setNewUsername('');setNewPassword('');history.push('/');_context.next=19;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](5);console.log(_context.t0);setErrorMessage('Error: Could not register. Try again later.');setTimeout(function(){setErrorMessage(null);},2500);case 19:case\"end\":return _context.stop();}}},_callee,null,[[5,14]]);}));return function handleRegister(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"Register\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleRegister},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{className:\"subtitle\",for:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(\"input\",{className:\"formTextbox\",id:\"username\",value:newUsername,onChange:function onChange(_ref3){var target=_ref3.target;return setNewUsername(target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{className:\"subtitle\",for:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{className:\"formTextbox\",id:\"password\",type:\"password\",value:newPassword,onChange:function onChange(_ref4){var target=_ref4.target;return setNewPassword(target.value);}})),/*#__PURE__*/React.createElement(\"button\",{className:\"button\",id:\"login-button\",type:\"submit\"},\"Register\"),/*#__PURE__*/React.createElement(\"button\",{className:\"button\",id:\"cancel-button\",onClick:onCancel},\"Cancel\")));};export default RegisterForm;","map":{"version":3,"sources":["/Users/peterdpong/Projects/jotally/jotally-frontend/src/components/RegisterForm.js"],"names":["React","useState","registerService","useHistory","RegisterForm","setErrorMessage","history","newUsername","setNewUsername","newPassword","setNewPassword","onCancel","event","preventDefault","push","handleRegister","setTimeout","register","user","console","log","target","value"],"mappings":"2fAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAEf,IADJC,CAAAA,eACI,MADJA,eACI,CACJ,GAAMC,CAAAA,OAAO,CAAGH,UAAU,EAA1B,CADI,cAEkCF,QAAQ,CAAC,EAAD,CAF1C,wCAEGM,WAFH,eAEgBC,cAFhB,8BAGkCP,QAAQ,CAAC,EAAD,CAH1C,yCAGGQ,WAHH,eAGgBC,cAHhB,eAKJ,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1BA,KAAK,CAACC,cAAN,GACAP,OAAO,CAACQ,IAAR,CAAa,GAAb,EACD,CAHD,CAKA,GAAMC,CAAAA,cAAc,2FAAG,iBAAOH,KAAP,2HACrBA,KAAK,CAACC,cAAN,GADqB,KAGlBN,WAAW,EAAI,EAAf,EAAqBE,WAAW,EAAI,EAHlB,0BAInBJ,eAAe,CAAC,4CAAD,CAAf,CACAW,UAAU,CAAC,UAAM,CACfX,eAAe,CAAC,EAAD,CAAf,CACD,CAFS,CAEP,IAFO,CAAV,CALmB,8EAYAH,CAAAA,eAAe,CAACe,QAAhB,CAAyB,CAC1CV,WAAW,CAAXA,WAD0C,CAC7BE,WAAW,CAAXA,WAD6B,CAAzB,CAZA,QAYbS,IAZa,eAenBV,cAAc,CAAC,EAAD,CAAd,CACAE,cAAc,CAAC,EAAD,CAAd,CACAJ,OAAO,CAACQ,IAAR,CAAa,GAAb,EAjBmB,iFAmBnBK,OAAO,CAACC,GAAR,cACAf,eAAe,CAAC,6CAAD,CAAf,CACAW,UAAU,CAAC,UAAM,CACfX,eAAe,CAAC,IAAD,CAAf,CACD,CAFS,CAEP,IAFO,CAAV,CArBmB,qEAAH,kBAAdU,CAAAA,cAAc,6CAApB,CA2BA,mBACE,4CACE,0BAAI,SAAS,CAAC,OAAd,aADF,cAGE,4BAAM,QAAQ,CAAEA,cAAhB,eACE,4CACE,6BAAO,SAAS,CAAC,UAAjB,CAA4B,GAAG,CAAC,UAAhC,aADF,cAEE,6BACE,SAAS,CAAC,aADZ,CAEE,EAAE,CAAC,UAFL,CAGE,KAAK,CAAER,WAHT,CAIE,QAAQ,CAAE,4BAAGc,CAAAA,MAAH,OAAGA,MAAH,OAAgBb,CAAAA,cAAc,CAACa,MAAM,CAACC,KAAR,CAA9B,EAJZ,EAFF,CADF,cAWE,4CACA,6BAAO,SAAS,CAAC,UAAjB,CAA4B,GAAG,CAAC,UAAhC,aADA,cAEE,6BACE,SAAS,CAAC,aADZ,CAEE,EAAE,CAAC,UAFL,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAEb,WAJT,CAKE,QAAQ,CAAE,4BAAGY,CAAAA,MAAH,OAAGA,MAAH,OAAgBX,CAAAA,cAAc,CAACW,MAAM,CAACC,KAAR,CAA9B,EALZ,EAFF,CAXF,cAqBE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,EAAE,CAAC,cAA9B,CAA6C,IAAI,CAAC,QAAlD,aArBF,cAsBE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,EAAE,CAAC,eAA9B,CAA8C,OAAO,CAAEX,QAAvD,WAtBF,CAHF,CADF,CAgCD,CAvED,CAyEA,cAAeP,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport registerService from '../services/register'\nimport { useHistory } from 'react-router-dom'\n\n\nconst RegisterForm = ({\n  setErrorMessage\n}) => {\n  const history = useHistory()\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('') \n\n  const onCancel = (event) => {\n    event.preventDefault()\n    history.push('/')\n  }\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n\n    if(newUsername == '' || newPassword == ''){\n      setErrorMessage('Username or Password cannot be left empty.')\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 2500)\n      return\n    }\n\n    try {\n      const user = await registerService.register({\n        newUsername, newPassword\n      })\n      setNewUsername('')\n      setNewPassword('')\n      history.push('/')\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('Error: Could not register. Try again later.')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2500)\n    }\n  }\n\n  return(\n    <div>\n      <h2 className=\"title\">Register</h2>\n\n      <form onSubmit={handleRegister}>\n        <div>\n          <label className=\"subtitle\" for=\"username\">Username</label>\n          <input\n            className=\"formTextbox\"\n            id=\"username\"\n            value={newUsername}\n            onChange={({ target }) => setNewUsername(target.value)}\n          />\n        </div>\n\n        <div>\n        <label className=\"subtitle\" for=\"password\">Password</label>\n          <input\n            className=\"formTextbox\"\n            id=\"password\"\n            type=\"password\"\n            value={newPassword}\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <button className=\"button\" id='login-button' type=\"submit\">Register</button>\n        <button className=\"button\" id='cancel-button' onClick={onCancel}>Cancel</button>\n      </form>\n\n      \n    </div>\n  )\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}