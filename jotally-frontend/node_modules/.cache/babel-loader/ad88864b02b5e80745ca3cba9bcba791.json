{"ast":null,"code":"import _regeneratorRuntime from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var baseUrl=\"/api/notes\";var token=null;var setToken=function setToken(newToken){token=\"bearer \".concat(newToken);};var getAll=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var config,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{Authorization:token}};_context.next=3;return axios.get(baseUrl,config);case 3:response=_context.sent;console.log(response.data);return _context.abrupt(\"return\",response.data);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getAll(){return _ref.apply(this,arguments);};}();var createNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newObject){var config,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{Authorization:token}};_context2.next=3;return axios.post(baseUrl,newObject,config);case 3:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function createNote(_x){return _ref2.apply(this,arguments);};}();var updateNote=function updateNote(id,newObject){var request=axios.put(\"\".concat(baseUrl,\"/\").concat(id),newObject);return request.then(function(response){return response.data;});};export default{getAll:getAll,createNote:createNote,updateNote:updateNote,setToken:setToken};","map":{"version":3,"sources":["/Users/peterdpong/Projects/jotally/jotally-frontend/src/services/notes.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","config","headers","Authorization","get","response","console","log","data","createNote","newObject","post","updateNote","id","request","put","then"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,OAAO,CAAG,YAAhB,CAEA,GAAIC,CAAAA,KAAK,CAAG,IAAZ,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,QAAQ,CAAI,CAC3BF,KAAK,kBAAaE,QAAb,CAAL,CACD,CAFD,CAIA,GAAMC,CAAAA,MAAM,0FAAI,uJACRC,MADQ,CACC,CACbC,OAAO,CAAE,CAAEC,aAAa,CAAEN,KAAjB,CADI,CADD,uBAKSF,CAAAA,KAAK,CAACS,GAAN,CAAUR,OAAV,CAAmBK,MAAnB,CALT,QAKRI,QALQ,eAMdC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EANc,gCAOPH,QAAQ,CAACG,IAPF,wDAAJ,kBAANR,CAAAA,MAAM,0CAAZ,CAUA,GAAMS,CAAAA,UAAU,2FAAG,kBAAMC,SAAN,0IACXT,MADW,CACF,CACbC,OAAO,CAAE,CAAEC,aAAa,CAAEN,KAAjB,CADI,CADE,wBAIMF,CAAAA,KAAK,CAACgB,IAAN,CAAWf,OAAX,CAAoBc,SAApB,CAA+BT,MAA/B,CAJN,QAIXI,QAJW,iDAKVA,QAAQ,CAACG,IALC,0DAAH,kBAAVC,CAAAA,UAAU,6CAAhB,CAQA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAKH,SAAL,CAAmB,CACpC,GAAMI,CAAAA,OAAO,CAAGnB,KAAK,CAACoB,GAAN,WAAanB,OAAb,aAAwBiB,EAAxB,EAA8BH,SAA9B,CAAhB,CACA,MAAOI,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAX,QAAQ,QAAIA,CAAAA,QAAQ,CAACG,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,cAAe,CAAER,MAAM,CAANA,MAAF,CAAUS,UAAU,CAAVA,UAAV,CAAsBG,UAAU,CAAVA,UAAtB,CAAkCd,QAAQ,CAARA,QAAlC,CAAf","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/notes\"\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll =  async () => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.get(baseUrl, config)\n  console.log(response.data)\n  return response.data\n}\n\nconst createNote = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst updateNote = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, createNote, updateNote, setToken}\n"]},"metadata":{},"sourceType":"module"}