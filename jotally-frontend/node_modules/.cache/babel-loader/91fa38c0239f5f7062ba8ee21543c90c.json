{"ast":null,"code":"import _regeneratorRuntime from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/peterdpong/Projects/jotally/jotally-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useHistory}from'react-router-dom';import noteService from'../services/notes';import loginService from'../services/login';var LoginForm=function LoginForm(_ref){var username=_ref.username,password=_ref.password,setUser=_ref.setUser,setUsername=_ref.setUsername,setPassword=_ref.setPassword,setErrorMessage=_ref.setErrorMessage;var history=useHistory();var onCancel=function onCancel(event){event.preventDefault();history.push('/');};var handleLogin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;_context.next=4;return loginService.login({username:username,password:password});case 4:user=_context.sent;window.localStorage.setItem('loggedNoteappUser',JSON.stringify(user));noteService.setToken(user.token);setUser(user);setUsername('');setPassword('');history.push('/');_context.next=18;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.log(_context.t0);setErrorMessage('Wrong username or password.');setTimeout(function(){setErrorMessage(null);},2500);case 18:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function handleLogin(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"Login\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleLogin},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{className:\"subtitle\",for:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(\"input\",{className:\"formTextbox\",id:\"username\",value:username,onChange:function onChange(_ref3){var target=_ref3.target;return setUsername(target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{className:\"subtitle\",for:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{className:\"formTextbox\",id:\"password\",type:\"password\",value:password,onChange:function onChange(_ref4){var target=_ref4.target;return setPassword(target.value);}})),/*#__PURE__*/React.createElement(\"button\",{className:\"button\",id:\"login-button\",type:\"submit\"},\"Login\"),/*#__PURE__*/React.createElement(\"button\",{className:\"button\",id:\"cancel-button\",onClick:onCancel},\"Cancel\")));};export default LoginForm;","map":{"version":3,"sources":["/Users/peterdpong/Projects/jotally/jotally-frontend/src/components/LoginForm.js"],"names":["React","useHistory","noteService","loginService","LoginForm","username","password","setUser","setUsername","setPassword","setErrorMessage","history","onCancel","event","preventDefault","push","handleLogin","login","user","window","localStorage","setItem","JSON","stringify","setToken","token","console","log","setTimeout","target","value"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,mBAAzB,CAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAQZ,IAPJC,CAAAA,QAOI,MAPJA,QAOI,CANJC,QAMI,MANJA,QAMI,CALJC,OAKI,MALJA,OAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,WAGI,MAHJA,WAGI,CAFJC,eAEI,MAFJA,eAEI,CAEJ,GAAMC,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CAEA,GAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1BA,KAAK,CAACC,cAAN,GACAH,OAAO,CAACI,IAAR,CAAa,GAAb,EACD,CAHD,CAKA,GAAMC,CAAAA,WAAW,2FAAG,iBAAOH,KAAP,2HAClBA,KAAK,CAACC,cAAN,GADkB,sCAGGX,CAAAA,YAAY,CAACc,KAAb,CAAmB,CACpCZ,QAAQ,CAARA,QADoC,CAC1BC,QAAQ,CAARA,QAD0B,CAAnB,CAHH,QAGVY,IAHU,eAOhBC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CACE,mBADF,CACuBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CADvB,EAIAhB,WAAW,CAACsB,QAAZ,CAAqBN,IAAI,CAACO,KAA1B,EACAlB,OAAO,CAACW,IAAD,CAAP,CACAV,WAAW,CAAC,EAAD,CAAX,CACAC,WAAW,CAAC,EAAD,CAAX,CACAE,OAAO,CAACI,IAAR,CAAa,GAAb,EAfgB,iFAiBhBW,OAAO,CAACC,GAAR,cACAjB,eAAe,CAAC,6BAAD,CAAf,CACAkB,UAAU,CAAC,UAAM,CACflB,eAAe,CAAC,IAAD,CAAf,CACD,CAFS,CAEP,IAFO,CAAV,CAnBgB,qEAAH,kBAAXM,CAAAA,WAAW,6CAAjB,CA0BA,mBACE,4CACE,0BAAI,SAAS,CAAC,OAAd,UADF,cAGE,4BAAM,QAAQ,CAAEA,WAAhB,eACE,4CACE,6BAAO,SAAS,CAAC,UAAjB,CAA4B,GAAG,CAAC,UAAhC,aADF,cAEE,6BACE,SAAS,CAAC,aADZ,CAEE,EAAE,CAAC,UAFL,CAGE,KAAK,CAAEX,QAHT,CAIE,QAAQ,CAAE,4BAAGwB,CAAAA,MAAH,OAAGA,MAAH,OAAgBrB,CAAAA,WAAW,CAACqB,MAAM,CAACC,KAAR,CAA3B,EAJZ,EAFF,CADF,cAWE,4CACA,6BAAO,SAAS,CAAC,UAAjB,CAA4B,GAAG,CAAC,UAAhC,aADA,cAEE,6BACE,SAAS,CAAC,aADZ,CAEE,EAAE,CAAC,UAFL,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAExB,QAJT,CAKE,QAAQ,CAAE,4BAAGuB,CAAAA,MAAH,OAAGA,MAAH,OAAgBpB,CAAAA,WAAW,CAACoB,MAAM,CAACC,KAAR,CAA3B,EALZ,EAFF,CAXF,cAqBE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,EAAE,CAAC,cAA9B,CAA6C,IAAI,CAAC,QAAlD,UArBF,cAsBE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,EAAE,CAAC,eAA9B,CAA8C,OAAO,CAAElB,QAAvD,WAtBF,CAHF,CADF,CAgCD,CA3ED,CAsFA,cAAeR,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\nimport noteService from '../services/notes'\nimport loginService from '../services/login'\n\n\n\n\nconst LoginForm = ({\n  username,\n  password,\n  setUser,\n  setUsername,\n  setPassword,\n  setErrorMessage\n  \n}) => {\n\n  const history = useHistory()\n\n  const onCancel = (event) => {\n    event.preventDefault()\n    history.push('/')\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n  \n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n  \n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      console.log(exception)\n      setErrorMessage('Wrong username or password.')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2500)\n    } \n  }\n\n\n  return (\n    <div>\n      <h2 className=\"title\">Login</h2>\n\n      <form onSubmit={handleLogin}>\n        <div>\n          <label className=\"subtitle\" for=\"username\">Username</label>\n          <input\n            className=\"formTextbox\"\n            id=\"username\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n\n        <div>\n        <label className=\"subtitle\" for=\"password\">Password</label>\n          <input\n            className=\"formTextbox\"\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button className=\"button\" id='login-button' type=\"submit\">Login</button>\n        <button className=\"button\" id='cancel-button' onClick={onCancel}>Cancel</button>\n      </form>\n\n      \n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n  setUsername: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  setErrorMessage: PropTypes.func.isRequired,\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}