{"ast":null,"code":"var _jsxFileName = \"/Users/peterdpong/Projects/jotally/jotally-frontend/src/components/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport registerService from '../services/register';\nimport { useHistory } from 'react-router-dom';\n\nconst RegisterForm = ({\n  setErrorMessage\n}) => {\n  const history = useHistory();\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n  const onCancel = event => {\n    event.preventDefault();\n    history.push('/');\n  };\n\n  const handleRegister = event => {\n    event.preventDefault();\n\n    if (newUsername.isEmpty() || newPassword.isEmpty()) {\n      console.log(test);\n      return;\n    } // try {\n    //   const user = await registerService.register({\n    //     newUsername, newPassword\n    //   })\n    //   setNewUsername('')\n    //   setNewPassword('')\n    //   history.push('/')\n    // } catch {\n    //   console.log(exception)\n    //   setErrorMessage('Error: Could not register. Try again later.')\n    //   setTimeout(() => {\n    //     setErrorMessage(null)\n    //   }, 2500)\n    // }\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"subtitle\",\n    for: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formTextbox\",\n    id: \"username\",\n    value: username,\n    onChange: ({\n      target\n    }) => setNewUsername(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"subtitle\",\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formTextbox\",\n    id: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: ({\n      target\n    }) => setNewPassword(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    id: \"login-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    id: \"cancel-button\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n};","map":{"version":3,"sources":["/Users/peterdpong/Projects/jotally/jotally-frontend/src/components/RegisterForm.js"],"names":["React","useState","registerService","useHistory","RegisterForm","setErrorMessage","history","newUsername","setNewUsername","newPassword","setNewPassword","onCancel","event","preventDefault","push","handleRegister","isEmpty","console","log","test","username","target","value","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA;AADoB,CAAD,KAEf;AACJ,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,QAAMC,cAAc,GAAIH,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGN,WAAW,CAACS,OAAZ,MAAyBP,WAAW,CAACO,OAAZ,EAA5B,EAAkD;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA;AACD,KAN+B,CAQhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAtBD;;AAwBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAM,IAAA,QAAQ,EAAEJ,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,GAAG,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,KAAK,EAAEK,QAHT;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgBb,cAAc,CAACa,MAAM,CAACC,KAAR,CAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,GAAG,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEC,QAJT;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAEF,MAAAA;AAAF,KAAD,KAAgBX,cAAc,CAACW,MAAM,CAACC,KAAR,CAL1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,eAqBE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,EAAE,EAAC,cAA9B;AAA6C,IAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eAsBE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,EAAE,EAAC,eAA9B;AAA8C,IAAA,OAAO,EAAEX,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,CAHF,CADF;AAgCD,CApED","sourcesContent":["import React, { useState } from 'react'\nimport registerService from '../services/register'\nimport { useHistory } from 'react-router-dom'\n\n\nconst RegisterForm = ({\n  setErrorMessage\n}) => {\n  const history = useHistory()\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('') \n\n  const onCancel = (event) => {\n    event.preventDefault()\n    history.push('/')\n  }\n\n  const handleRegister = (event) => {\n    event.preventDefault()\n\n    if(newUsername.isEmpty() || newPassword.isEmpty()){\n      console.log(test)\n      return\n    }\n\n    // try {\n    //   const user = await registerService.register({\n    //     newUsername, newPassword\n    //   })\n    //   setNewUsername('')\n    //   setNewPassword('')\n    //   history.push('/')\n    // } catch {\n    //   console.log(exception)\n    //   setErrorMessage('Error: Could not register. Try again later.')\n    //   setTimeout(() => {\n    //     setErrorMessage(null)\n    //   }, 2500)\n    // }\n  }\n\n  return(\n    <div>\n      <h2 className=\"title\">Register</h2>\n\n      <form onSubmit={handleRegister}>\n        <div>\n          <label className=\"subtitle\" for=\"username\">Username</label>\n          <input\n            className=\"formTextbox\"\n            id=\"username\"\n            value={username}\n            onChange={({ target }) => setNewUsername(target.value)}\n          />\n        </div>\n\n        <div>\n        <label className=\"subtitle\" for=\"password\">Password</label>\n          <input\n            className=\"formTextbox\"\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <button className=\"button\" id='login-button' type=\"submit\">Register</button>\n        <button className=\"button\" id='cancel-button' onClick={onCancel}>Cancel</button>\n      </form>\n\n      \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}